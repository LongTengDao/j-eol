{
	"version":
		3,
	"file":
		"index.mjs",
	"sourceRoot":
		"../../src/",
	"sources":
		["version?text","../../j-regexp/src/clearRegExp.ts","../../j-groupify/src/groupify.ts","export.ts"],
	"sourcesContent":
		[
			"export default '1.3.0';",
			"import RegExp from '.RegExp';\n\nvar clearRegExp = '$_' in RegExp\n\t? function () {\n\t\tvar REGEXP = /^/;\n\t\treturn function clearRegExp                (value    )                {\n\t\t\tREGEXP.test('');\n\t\t\treturn value;\n\t\t};\n\t}()\n\t: function clearRegExp                (value    )                {\n\t\treturn value;\n\t};\n\nexport default clearRegExp;",
			"import create from '.Object.create?=';\n\nvar NEED_TO_ESCAPE_IN_REGEXP = /^[$()*+\\-.?[\\\\\\]^{|]/;\nvar SURROGATE_PAIR = /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\nvar GROUP        = create(null);\n\nexport default function groupify (branches          , uFlag          , noEscape          )         {\n\tvar group        = create(null);\n\tvar appendBranch = uFlag ? appendPointBranch : appendCodeBranch;\n\tfor ( var length         = branches.length, index         = 0; index<length; ++index ) { appendBranch(group, branches[index]); }\n\treturn sourcify(group, !noEscape);\n};\n\nfunction appendPointBranch (group       , branch        )       {\n\tif ( branch ) {\n\t\tvar char         = SURROGATE_PAIR.test(branch) ? branch.slice(0, 2) : branch.charAt(0);\n\t\tappendPointBranch(group[char] || ( group[char] = create(null) ), branch.slice(char.length));\n\t}\n\telse { group[''] = GROUP; }\n}\n\nfunction appendCodeBranch (group       , branch        )       {\n\tif ( branch ) {\n\t\tvar char         = branch.charAt(0);\n\t\tappendCodeBranch(group[char] || ( group[char] = create(null) ), branch.slice(1));\n\t}\n\telse { group[''] = GROUP; }\n}\n\nfunction sourcify (group       , needEscape         )         {\n\tvar branches           = [];\n\tvar singleCharactersBranch           = [];\n\tvar noEmptyBranch          = true;\n\tfor ( var char in group ) {\n\t\tif ( char ) {\n\t\t\tvar sub_branches         = sourcify(group[char], needEscape);\n\t\t\tif ( needEscape && NEED_TO_ESCAPE_IN_REGEXP.test(char) ) { char = '\\\\'+char; }\n\t\t\tsub_branches ? branches.push(char+sub_branches) : singleCharactersBranch.push(char);\n\t\t}\n\t\telse { noEmptyBranch = false; }\n\t}\n\tsingleCharactersBranch.length && branches.unshift(singleCharactersBranch.length===1 ? singleCharactersBranch[0] : '['+singleCharactersBranch.join('')+']');\n\treturn branches.length===0\n\t\t? ''\n\t\t: ( branches.length===1 && ( singleCharactersBranch.length || noEmptyBranch )\n\t\t\t? branches[0]\n\t\t\t: '(?:'+branches.join('|')+')'\n\t\t)\n\t\t+( noEmptyBranch ? '' : '?' );\n}\n\n                                       \n",
			"import version from './version?text';\nexport { version };\n\nimport SyntaxError from '.SyntaxError';\nimport RegExp from '.RegExp';\nimport isArray from '.Array.isArray?=';\n\nimport { groupify, clearRegExp } from '@ltd/j-regexp';\n\nvar FLAGS = /\\/([a-fh-z]*)g([a-fh-z]*)$/;\n\nfunction removeGlobal (regExp        ) {\n\tvar flags = FLAGS.exec(''+regExp);\n\treturn flags ? RegExp(regExp, flags[1]+flags[2]) : regExp;\n}\n\nexport function EOL                     (allow                , disallow_uniform                              , uniform_disallow                              ) {\n\t\n\tvar DISALLOW        ;\n\tvar FIRST         ;\n\tif ( typeof disallow_uniform==='object' ) {\n\t\tDISALLOW = isArray(disallow_uniform) ? RegExp(groupify(disallow_uniform)) : removeGlobal(disallow_uniform);\n\t\tFIRST = !uniform_disallow;\n\t}\n\telse if ( typeof uniform_disallow==='object' ) {\n\t\tDISALLOW = isArray(uniform_disallow) ? RegExp(groupify(uniform_disallow)) : removeGlobal(uniform_disallow);\n\t\tFIRST = !disallow_uniform;\n\t}\n\telse {\n\t\tFIRST = !( uniform_disallow || disallow_uniform );\n\t}\n\tvar ALLOW = isArray(allow)\n\t\t? FIRST\n\t\t\t? RegExp(groupify(allow))\n\t\t\t: RegExp(groupify(allow), 'g')\n\t\t: allow;\n\t\n\treturn function EOL (string        )           {\n\t\tif ( DISALLOW && DISALLOW.test(string) ) { throw clearRegExp(SyntaxError)('存在禁用换行符'); }\n\t\tvar eols = clearRegExp(string.match(ALLOW))                ;\n\t\tif ( !eols ) { return ''; }\n\t\tif ( FIRST ) { return eols[0]; }\n\t\tvar eol = eols[0];\n\t\tfor ( var length = eols.length, index = 1; index<length; ++index ) { if ( eols[index]!==eol ) { throw SyntaxError('存在多种换行符'); } }\n\t\treturn eol;\n\t};\n\t\n}\n\nexport var LF     = '\\n';\nexport var VT     = '\\x0B';\nexport var FF     = '\\f';\nexport var CRLF       = '\\r\\n';\nexport var CR     = '\\r';\nexport var NEL      = '\\x85';\nexport var LS     = '\\u2028';\nexport var PS     = '\\u2029';\n\n                      \n                        \n                      \n                          \n                      \n                         \n                          \n                          \n\nimport Default from '.default?=';\nexport default Default(EOL, {\n\tversion: version,\n\tEOL: EOL,\n\tLF: LF,\n\tVT: VT,\n\tFF: FF,\n\tCRLF: CRLF,\n\tCR: CR,\n\tNEL: NEL,\n\tLS: LS,\n\tPS: PS\n});"
		],
	"names":
		[],
	"mappings":
		"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"
}