{
	"version":
		3,
	"file":
		"index.mjs",
	"sourceRoot":
		"../../src/",
	"sources":
		["version?text","../../j-groupify/src/groupify.ts","../../j-regexp/src/clearRegExp.ts","export.ts"],
	"sourcesContent":
		[
			"export default '1.0.0';",
			"import create from '.Object.create?=';\n\nvar NEED_TO_ESCAPE_IN_REGEXP = /^[$()*+\\-.?[\\\\\\]^{|]$/;\nvar SURROGATE_PAIR = /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\nvar GROUP :Group = create(null);\n\nexport default function groupify (branches :string[], uFlag? :boolean, noEscape? :boolean) :string {\n\tvar group :Group = create(null);\n\tvar appendBranch = uFlag ? appendPointBranch : appendCodeBranch;\n\tfor ( var length :number = branches.length, index :number = 0; index<length; ++index ) { appendBranch(group, branches[index]); }\n\treturn sourcify(group, !noEscape);\n};\n\nfunction appendPointBranch (group :Group, branch :string) :void {\n\tif ( branch ) {\n\t\tvar char :string = SURROGATE_PAIR.test(branch) ? branch.slice(0, 2) : branch.charAt(0);\n\t\tappendPointBranch(group[char] || ( group[char] = create(null) ), branch.slice(char.length));\n\t}\n\telse { group[''] = GROUP; }\n}\n\nfunction appendCodeBranch (group :Group, branch :string) :void {\n\tif ( branch ) {\n\t\tvar char :string = branch.charAt(0);\n\t\tappendCodeBranch(group[char] || ( group[char] = create(null) ), branch.slice(1));\n\t}\n\telse { group[''] = GROUP; }\n}\n\nfunction sourcify (group :Group, needEscape :boolean) :string {\n\tvar branches :string[] = [];\n\tvar singleCharactersBranch :string[] = [];\n\tvar noEmptyBranch :boolean = true;\n\tfor ( var char in group ) {\n\t\tif ( char ) {\n\t\t\tvar sub_branches :string = sourcify(group[char], needEscape);\n\t\t\tif ( needEscape && NEED_TO_ESCAPE_IN_REGEXP.test(char) ) { char = '\\\\'+char; }\n\t\t\tsub_branches ? branches.push(char+sub_branches) : singleCharactersBranch.push(char);\n\t\t}\n\t\telse { noEmptyBranch = false; }\n\t}\n\tsingleCharactersBranch.length && branches.unshift(singleCharactersBranch.length===1 ? singleCharactersBranch[0] : '['+singleCharactersBranch.join('')+']');\n\treturn branches.length===0\n\t\t? ''\n\t\t: ( branches.length===1 && ( singleCharactersBranch.length || noEmptyBranch )\n\t\t\t? branches[0]\n\t\t\t: '(?:'+branches.join('|')+')'\n\t\t)\n\t\t+( noEmptyBranch ? '' : '?' );\n}\n\ntype Group = { [char :string] :Group };\n",
			"import RegExp from '.RegExp';\n\nvar clearRegExp = '$_' in RegExp\n\t? function () {\n\t\tvar REGEXP = /^/;\n\t\treturn function clearRegExp<T extends any> (value? :T) :undefined | T {\n\t\t\tREGEXP.test('');\n\t\t\treturn value;\n\t\t};\n\t}()\n\t: function clearRegExp<T extends any> (value? :T) :undefined | T {\n\t\treturn value;\n\t};\n\nexport default clearRegExp;",
			"import version from './version?text';\nexport { version };\n\nimport SyntaxError from '.SyntaxError';\nimport RegExp from '.RegExp';\nimport isArray from '.Array.isArray?=';\n\nimport { groupify } from '@ltd/j-groupify';\nimport { clearRegExp } from '@ltd/j-regexp';\n\nexport function EOL<EOL extends string> (allow :EOL[] | RegExp, disallow_uniform? :string[] | RegExp | boolean, uniform_disallow? :boolean | string[] | RegExp) {\n\t\n\tif ( typeof disallow_uniform==='object' ) {\n\t\tDISALLOW = isArray(disallow_uniform) ? new RegExp(groupify(disallow_uniform)) : disallow_uniform;\n\t\tFIRST = !uniform_disallow;\n\t}\n\telse if ( typeof uniform_disallow==='object' ) {\n\t\tDISALLOW = isArray(uniform_disallow) ? new RegExp(groupify(uniform_disallow)) : uniform_disallow;\n\t\tFIRST = !disallow_uniform;\n\t}\n\telse {\n\t\tFIRST = !( uniform_disallow || disallow_uniform );\n\t}\n\tvar DISALLOW :RegExp;\n\tvar FIRST :boolean;\n\tvar ALLOW = isArray(allow) ? new RegExp(groupify(allow), FIRST ? '' : 'g') : allow;\n\t\n\treturn function EOL (string :string) :EOL | '' {\n\t\tif ( DISALLOW && DISALLOW.test(string) ) { throw clearRegExp(SyntaxError)('存在禁用换行符'); }\n\t\tvar eols :EOL[] | null = <EOL[] | null> clearRegExp(string.match(ALLOW));\n\t\tif ( !eols ) { return ''; }\n\t\tif ( FIRST ) { return eols[0]; }\n\t\tvar eol = eols[0];\n\t\tfor ( var length = eols.length, index = 1; index<length; ++index ) { if ( eols[index]!==eol ) { throw SyntaxError('存在多种换行符'); } }\n\t\treturn eol;\n\t};\n\t\n}\n\nexport var LF :LF = '\\n';\nexport var VT :VT = '\\x0B';\nexport var FF :FF = '\\f';\nexport var CRLF :CRLF = '\\r\\n';\nexport var CR :CR = '\\r';\nexport var NEL :NEL = '\\x85';\nexport var LS :LS = '\\u2028';\nexport var PS :PS = '\\u2029';\n\nexport type LF = '\\n';\nexport type VT = '\\x0B';\nexport type FF = '\\f';\nexport type CRLF = '\\r\\n';\nexport type CR = '\\r';\nexport type NEL = '\\x85';\nexport type LS = '\\u2028';\nexport type PS = '\\u2029';\n\nimport Default from '.default';\nexport default Default(EOL, {\n\tversion: version,\n\tEOL: EOL,\n\tLF: LF,\n\tVT: VT,\n\tFF: FF,\n\tCRLF: CRLF,\n\tCR: CR,\n\tNEL: NEL,\n\tLS: LS,\n\tPS: PS\n});"
		],
	"names":
		[],
	"mappings":
		"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"
}