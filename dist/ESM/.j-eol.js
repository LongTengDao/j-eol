/*!
 * 模块名称：j-eol
 * 模块功能：换行符相关共享实用程序。从属于“简计划”。
   　　　　　EOL util. Belong to "Plan J".
 * 模块版本：1.0.0
 * 许可条款：LGPL-3.0
 * 所属作者：龙腾道 <LongTengDao@LongTengDao.com> (www.LongTengDao.com)
 * 问题反馈：https://GitHub.com/LongTengDao/j-eol/issues
 * 项目主页：https://GitHub.com/LongTengDao/j-eol/
 */

import SyntaxError from '.SyntaxError';
import RegExp from '.RegExp';
import isArray from '.Array.isArray?=';
import create from '.Object.create?=';
import Default from '.default';

var version = '1.0.0';

/*!
 * 模块名称：j-groupify
 * 模块功能：将一个字符串数组，转化为分支式优化后的正则表达式匹配组。
   　　　　　Transform a string array into a branch-style optimized regExp group.
 * 模块版本：3.4.2
 * 许可条款：LGPL-3.0
 * 所属作者：龙腾道 <LongTengDao@LongTengDao.com> (www.LongTengDao.com)
 * 问题反馈：https://GitHub.com/LongTengDao/j-groupify/issues
 * 项目主页：https://GitHub.com/LongTengDao/j-groupify/
 */

var NEED_TO_ESCAPE_IN_REGEXP = /^[$()*+\-.?[\\\]^{|]$/;
var SURROGATE_PAIR = /^[\uD800-\uDBFF][\uDC00-\uDFFF]/;
var GROUP = create(null);
function groupify(branches, uFlag, noEscape) {
    var group = create(null);
    var appendBranch = uFlag ? appendPointBranch : appendCodeBranch;
    for (var length = branches.length, index = 0; index < length; ++index) {
        appendBranch(group, branches[index]);
    }
    return sourcify(group, !noEscape);
}
function appendPointBranch(group, branch) {
    if (branch) {
        var char = SURROGATE_PAIR.test(branch) ? branch.slice(0, 2) : branch.charAt(0);
        appendPointBranch(group[char] || (group[char] = create(null)), branch.slice(char.length));
    }
    else {
        group[''] = GROUP;
    }
}
function appendCodeBranch(group, branch) {
    if (branch) {
        var char = branch.charAt(0);
        appendCodeBranch(group[char] || (group[char] = create(null)), branch.slice(1));
    }
    else {
        group[''] = GROUP;
    }
}
function sourcify(group, needEscape) {
    var branches = [];
    var singleCharactersBranch = [];
    var noEmptyBranch = true;
    for (var char in group) {
        if (char) {
            var sub_branches = sourcify(group[char], needEscape);
            if (needEscape && NEED_TO_ESCAPE_IN_REGEXP.test(char)) {
                char = '\\' + char;
            }
            sub_branches ? branches.push(char + sub_branches) : singleCharactersBranch.push(char);
        }
        else {
            noEmptyBranch = false;
        }
    }
    singleCharactersBranch.length && branches.unshift(singleCharactersBranch.length === 1 ? singleCharactersBranch[0] : '[' + singleCharactersBranch.join('') + ']');
    return branches.length === 0
        ? ''
        : (branches.length === 1 && (singleCharactersBranch.length || noEmptyBranch)
            ? branches[0]
            : '(?:' + branches.join('|') + ')')
            + (noEmptyBranch ? '' : '?');
}

/*¡ j-groupify */

/*!
 * 模块名称：j-regexp
 * 模块功能：可读性更好的正则表达式创建方式。
   　　　　　More readable way for creating RegExp.
 * 模块版本：5.2.0
 * 许可条款：LGPL-3.0
 * 所属作者：龙腾道 <LongTengDao@LongTengDao.com> (www.LongTengDao.com)
 * 问题反馈：https://GitHub.com/LongTengDao/j-regexp/issues
 * 项目主页：https://GitHub.com/LongTengDao/j-regexp/
 */

var clearRegExp = '$_' in RegExp
    ? function () {
        var REGEXP = /^/;
        return function clearRegExp(value) {
            REGEXP.test('');
            return value;
        };
    }()
    : function clearRegExp(value) {
        return value;
    };

/*¡ j-regexp */

function EOL(allow, disallow_uniform, uniform_disallow) {
    if (typeof disallow_uniform === 'object') {
        DISALLOW = isArray(disallow_uniform) ? new RegExp(groupify(disallow_uniform)) : disallow_uniform;
        FIRST = !uniform_disallow;
    }
    else if (typeof uniform_disallow === 'object') {
        DISALLOW = isArray(uniform_disallow) ? new RegExp(groupify(uniform_disallow)) : uniform_disallow;
        FIRST = !disallow_uniform;
    }
    else {
        FIRST = !(uniform_disallow || disallow_uniform);
    }
    var DISALLOW;
    var FIRST;
    var ALLOW = isArray(allow) ? new RegExp(groupify(allow), FIRST ? '' : 'g') : allow;
    return function EOL(string) {
        if (DISALLOW && DISALLOW.test(string)) {
            throw clearRegExp(SyntaxError)('存在禁用换行符');
        }
        var eols = clearRegExp(string.match(ALLOW));
        if (!eols) {
            return '';
        }
        if (FIRST) {
            return eols[0];
        }
        var eol = eols[0];
        for (var length = eols.length, index = 1; index < length; ++index) {
            if (eols[index] !== eol) {
                throw SyntaxError('存在多种换行符');
            }
        }
        return eol;
    };
}
var LF = '\n';
var VT = '\x0B';
var FF = '\f';
var CRLF = '\r\n';
var CR = '\r';
var NEL = '\x85';
var LS = '\u2028';
var PS = '\u2029';
var _export = Default(EOL, {
    version: version,
    EOL: EOL,
    LF: LF,
    VT: VT,
    FF: FF,
    CRLF: CRLF,
    CR: CR,
    NEL: NEL,
    LS: LS,
    PS: PS
});

export default _export;
export { CR, CRLF, EOL, FF, LF, LS, NEL, PS, VT, version };

/*¡ j-eol */

//# sourceMappingURL=data:application/json;charset=utf-8;base64,